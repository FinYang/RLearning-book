[["task-02.html", " 2     2.1  2.2  2.3  2.4  2.5  2.6  2.7    Datawhale", "  2   Task 0265~8  library(mlbench) # BostonHousing library(funModeling) # status() library(tidyverse) # dplyr %&gt;% library(VIM) # aggr() library(mice) #  library(Rlof) # LOFlof() library(fastDummies) # dummydummy_cols() library(sjmisc) # dummyto_dummy() library(MASS) # box-cox library(dlookr) # transform()   1 h1n1  h1n1https://www.drivendata.org/competitions/66/flu-shot-learning/page/211/ 26,70732+1h1n1   h1n1_data &lt;- read.csv(&quot;./datasets/h1n1_flu.csv&quot;, header = TRUE) dim(h1n1_data) ## [1] 26707 33 3210R h1n1_data &lt;- h1n1_data[, c(1, 3, 11, 12, 15, 16, 19, 20, 22, 23, 33)] head(h1n1_data) ## respondent_id h1n1_knowledge doctor_recc_h1n1 chronic_med_condition ## 1 0 0 0 0 ## 2 1 2 0 0 ## 3 2 1 NA 1 ## 4 3 1 0 1 ## 5 4 1 0 0 ## 6 5 1 0 0 ## health_insurance opinion_h1n1_vacc_effective age_group education ## 1 1 3 55 - 64 Years &lt; 12 Years ## 2 1 5 35 - 44 Years 12 Years ## 3 NA 3 18 - 34 Years College Graduate ## 4 NA 3 65+ Years 12 Years ## 5 NA 3 45 - 54 Years Some College ## 6 NA 5 65+ Years 12 Years ## sex income_poverty h1n1_vaccine ## 1 Female Below Poverty 0 ## 2 Male Below Poverty 0 ## 3 Male &lt;= $75,000, Above Poverty 0 ## 4 Female Below Poverty 0 ## 5 Female &lt;= $75,000, Above Poverty 0 ## 6 Male &lt;= $75,000, Above Poverty 0 2   mlbenchhttps://blog.csdn.net/weixin_46027193/article/details/112238597 50613+1  data(BostonHousing) dim(BostonHousing) ## [1] 506 14 head(BostonHousing) ## crim zn indus chas nox rm age dis rad tax ptratio b lstat ## 1 0.00632 18 2.31 0 0.538 6.575 65.2 4.0900 1 296 15.3 396.90 4.98 ## 2 0.02731 0 7.07 0 0.469 6.421 78.9 4.9671 2 242 17.8 396.90 9.14 ## 3 0.02729 0 7.07 0 0.469 7.185 61.1 4.9671 2 242 17.8 392.83 4.03 ## 4 0.03237 0 2.18 0 0.458 6.998 45.8 6.0622 3 222 18.7 394.63 2.94 ## 5 0.06905 0 2.18 0 0.458 7.147 54.2 6.0622 3 222 18.7 396.90 5.33 ## 6 0.02985 0 2.18 0 0.458 6.430 58.7 6.0622 3 222 18.7 394.12 5.21 ## medv ## 1 24.0 ## 2 21.6 ## 3 34.7 ## 4 33.4 ## 5 36.2 ## 6 28.7 2.1  unique()distinct() #  h1n1_data_de_dup1 &lt;- unique(h1n1_data) # respondent_id,h1n1_knowledge h1n1_data_de_dup2 &lt;- distinct(h1n1_data, respondent_id, h1n1_knowledge, .keep_all = T) 2.2   2.2.1  2.2.1.1  RNAis.na(a)!complete.cases(a)a #  y &lt;- c(1, 2, 3, NA) # is.nan is.na(y) ## [1] FALSE FALSE FALSE TRUE # !complete.cases() !complete.cases(y) ## [1] FALSE FALSE FALSE TRUE 2.2.1.2   #  sum(is.na(h1n1_data)) ## [1] 15912 #  sum(is.na(h1n1_data[&quot;h1n1_knowledge&quot;])) ## [1] 116  pMiss &lt;- function(x) { sum(is.na(x)) / length(x) * 100 } apply(h1n1_data, 2, pMiss) # % ## respondent_id h1n1_knowledge ## 0.0000000 0.4343431 ## doctor_recc_h1n1 chronic_med_condition ## 8.0877673 3.6357509 ## health_insurance opinion_h1n1_vacc_effective ## 45.9579885 1.4640356 ## age_group education ## 0.0000000 0.0000000 ## sex income_poverty ## 0.0000000 0.0000000 ## h1n1_vaccine ## 0.0000000 # apply(h1n1_data,1,pMiss) #% funModelingstatus()0NAh1n1 flu data_quality &lt;- status(h1n1_data) data_quality %&gt;% mutate(across(where(is.numeric), ~ round(., 3))) # 4 ## variable q_zeros p_zeros q_na ## respondent_id respondent_id 1 0.000 0 ## h1n1_knowledge h1n1_knowledge 2506 0.094 116 ## doctor_recc_h1n1 doctor_recc_h1n1 19139 0.717 2160 ## chronic_med_condition chronic_med_condition 18446 0.691 971 ## health_insurance health_insurance 1736 0.065 12274 ## opinion_h1n1_vacc_effective opinion_h1n1_vacc_effective 0 0.000 391 ## age_group age_group 0 0.000 0 ## education education 0 0.000 0 ## sex sex 0 0.000 0 ## income_poverty income_poverty 0 0.000 0 ## h1n1_vaccine h1n1_vaccine 21033 0.788 0 ## p_na q_inf p_inf type unique ## respondent_id 0.000 0 0 integer 26707 ## h1n1_knowledge 0.004 0 0 numeric 3 ## doctor_recc_h1n1 0.081 0 0 numeric 2 ## chronic_med_condition 0.036 0 0 numeric 2 ## health_insurance 0.460 0 0 numeric 2 ## opinion_h1n1_vacc_effective 0.015 0 0 numeric 5 ## age_group 0.000 0 0 character 5 ## education 0.000 0 0 character 5 ## sex 0.000 0 0 character 2 ## income_poverty 0.000 0 0 character 4 ## h1n1_vaccine 0.000 0 0 integer 2 h1n1 flu5 missing_Value &lt;- data_quality[which(data_quality$p_na &gt; 0), ] missing_Value$variable ## [1] &quot;h1n1_knowledge&quot; &quot;doctor_recc_h1n1&quot; ## [3] &quot;chronic_med_condition&quot; &quot;health_insurance&quot; ## [5] &quot;opinion_h1n1_vacc_effective&quot; 2.2.1.3  33 MCARMCAR MARMARMCARMAR-MAR WeightSex MNARMCARMAR MNAR MNARMCARMAR  VIMaggr() aggr(h1n1_data, cex.axis = .6, oma = c(9, 5, 5, 1)) # cex.axisoma VIMmatrixplot() health_insurancechronic_med_conditionopinion_h1n1_vacc_effective #  h1n1_data_matplt &lt;- h1n1_data h1n1_data_matplt$age_group &lt;- factor(h1n1_data_matplt$age_group) h1n1_data_matplt$education &lt;- factor(h1n1_data_matplt$education, levels = c(&quot;&quot;, &quot;&lt; 12 Years&quot;, &quot;12 Years&quot;, &quot;Some College&quot;, &quot;College Graduate&quot;)) h1n1_data_matplt$sex &lt;- factor(h1n1_data_matplt$sex) h1n1_data_matplt$income_poverty &lt;- factor(h1n1_data_matplt$income_poverty, levels = c(&quot;18 - 34 Years&quot;, &quot;&lt;= $75,000, Above Poverty&quot;, &quot;&gt; $75,000&quot;)) # levels(h1n1_data_matplt$age_group) #  #  par(mar = c(9, 4.1, 2.1, 2.1)) # xpar() matrixplot(h1n1_data_matplt, sortby = &quot;chronic_med_condition&quot;, cex.axis = 0.7) # cex.axis 10 shadow_mat &lt;- as.data.frame(abs(is.na(h1n1_data[, -1]))) head(shadow_mat) ## h1n1_knowledge doctor_recc_h1n1 chronic_med_condition health_insurance ## 1 0 0 0 0 ## 2 0 0 0 0 ## 3 0 1 0 1 ## 4 0 0 0 1 ## 5 0 0 0 1 ## 6 0 0 0 1 ## opinion_h1n1_vacc_effective age_group education sex income_poverty ## 1 0 0 0 0 0 ## 2 0 0 0 0 0 ## 3 0 0 0 0 0 ## 4 0 0 0 0 0 ## 5 0 0 0 0 0 ## 6 0 0 0 0 0 ## h1n1_vaccine ## 1 0 ## 2 0 ## 3 0 ## 4 0 ## 5 0 ## 6 0 #  shadow_mat &lt;- shadow_mat[which(apply(shadow_mat, 2, sum) &gt; 0)] #  cor(shadow_mat) ## h1n1_knowledge doctor_recc_h1n1 ## h1n1_knowledge 1.00000000 0.00546769 ## doctor_recc_h1n1 0.00546769 1.00000000 ## chronic_med_condition 0.02367388 0.09572429 ## health_insurance -0.01292316 0.22136525 ## opinion_h1n1_vacc_effective 0.01565202 0.14793032 ## chronic_med_condition health_insurance ## h1n1_knowledge 0.02367388 -0.01292316 ## doctor_recc_h1n1 0.09572429 0.22136525 ## chronic_med_condition 1.00000000 0.15724626 ## health_insurance 0.15724626 1.00000000 ## opinion_h1n1_vacc_effective 0.47431031 0.10403005 ## opinion_h1n1_vacc_effective ## h1n1_knowledge 0.01565202 ## doctor_recc_h1n1 0.14793032 ## chronic_med_condition 0.47431031 ## health_insurance 0.10403005 ## opinion_h1n1_vacc_effective 1.00000000 #  heatmap(cor(shadow_mat)) opinion_h1n1_vacc_effective  chronic_med_condition  MAR  2.2.2     //()  2.2.2.1  complete.cases()na.omit() h1n1_data_row_del1 &lt;- h1n1_data[!complete.cases(h1n1_data), ] h1n1_data_row_del2 &lt;- na.omit(h1n1_data) dataset[,-5]subset(dataset, select = -c(col1, col2))col1col2 health_insurance h1n1_data_col_del1 &lt;- subset(h1n1_data, select = -c(health_insurance)) 2.2.2.2  impute() h1n1_data_sim_imp &lt;- h1n1_data h1n1_data_sim_imp$h1n1_knowledge &lt;- impute(h1n1_data_sim_imp$h1n1_knowledge, 1) #  h1n1_data_sim_imp$h1n1_knowledge &lt;- impute(h1n1_data_sim_imp$h1n1_knowledge, median) #  h1n1_data_sim_imp$h1n1_knowledge &lt;- impute(h1n1_data_sim_imp$h1n1_knowledge, mean) #  2.2.2.3   2.2.2.4  MI310 RAmeliamicemi micemicemwith-poolwith()lmglmsummary()pool()5summary()mice #  # impm # m5m44 # method, ,methodmice imp &lt;- mice(h1n1_data, m = 4, seed = 122, printFlag = FALSE) ## Warning: Number of logged events: 4 # h1n1_knowledge # imp$imp$h1n1_knowledge #  # imp$method # mlm()glm()gam()nbrm() fit &lt;- with(imp, lm(h1n1_vaccine ~ h1n1_knowledge + doctor_recc_h1n1 + chronic_med_condition + health_insurance + opinion_h1n1_vacc_effective)) #  print.data.frame(summary(fit), digits = 4) ## term estimate std.error statistic p.value nobs ## 1 (Intercept) -0.30492 0.010809 -28.209 1.557e-172 26707 ## 2 h1n1_knowledge 0.03645 0.003661 9.956 2.596e-23 26707 ## 3 doctor_recc_h1n1 0.34604 0.005568 62.147 0.000e+00 26707 ## 4 chronic_med_condition 0.03033 0.005015 6.048 1.485e-09 26707 ## 5 health_insurance 0.07826 0.006754 11.587 5.706e-31 26707 ## 6 opinion_h1n1_vacc_effective 0.08317 0.002245 37.054 4.116e-293 26707 ## 7 (Intercept) -0.30718 0.010901 -28.179 3.509e-172 26707 ## 8 h1n1_knowledge 0.03689 0.003683 10.016 1.429e-23 26707 ## 9 doctor_recc_h1n1 0.33876 0.005563 60.893 0.000e+00 26707 ## 10 chronic_med_condition 0.02972 0.005031 5.907 3.521e-09 26707 ## 11 health_insurance 0.07776 0.006957 11.178 6.028e-29 26707 ## 12 opinion_h1n1_vacc_effective 0.08385 0.002258 37.128 2.986e-294 26707 ## 13 (Intercept) -0.30981 0.010830 -28.607 2.603e-177 26707 ## 14 h1n1_knowledge 0.03666 0.003679 9.965 2.386e-23 26707 ## 15 doctor_recc_h1n1 0.33489 0.005557 60.262 0.000e+00 26707 ## 16 chronic_med_condition 0.02948 0.005035 5.855 4.814e-09 26707 ## 17 health_insurance 0.08090 0.006742 12.000 4.334e-33 26707 ## 18 opinion_h1n1_vacc_effective 0.08415 0.002258 37.272 1.851e-296 26707 ## 19 (Intercept) -0.30608 0.010910 -28.055 1.047e-170 26707 ## 20 h1n1_knowledge 0.03702 0.003685 10.046 1.056e-23 26707 ## 21 doctor_recc_h1n1 0.33370 0.005564 59.970 0.000e+00 26707 ## 22 chronic_med_condition 0.02969 0.005040 5.891 3.877e-09 26707 ## 23 health_insurance 0.07557 0.006896 10.959 6.877e-28 26707 ## 24 opinion_h1n1_vacc_effective 0.08423 0.002259 37.278 1.490e-296 26707 # m pooled &lt;- pool(fit) #  pooled ## Class: mipo m = 4 ## term m estimate ubar b ## 1 (Intercept) 4 -0.30699871 1.179991e-04 4.368721e-06 ## 2 h1n1_knowledge 4 0.03675472 1.352049e-05 6.410610e-08 ## 3 doctor_recc_h1n1 4 0.33834805 3.094965e-05 3.095473e-05 ## 4 chronic_med_condition 4 0.02980518 2.530162e-05 1.342220e-07 ## 5 health_insurance 4 0.07812323 4.675346e-05 4.779575e-06 ## 6 opinion_h1n1_vacc_effective 4 0.08385005 5.085296e-06 2.294296e-07 ## t dfcom df riv lambda fmi ## 1 1.234600e-04 26701 1446.448456 0.046279160 0.044232134 0.045550936 ## 2 1.360062e-05 26701 20305.470346 0.005926755 0.005891836 0.005989737 ## 3 6.964306e-05 26701 9.710629 1.250205046 0.555596055 0.625522404 ## 4 2.546940e-05 26701 19168.975299 0.006631097 0.006587415 0.006691047 ## 5 5.272792e-05 26701 231.386715 0.127786668 0.113307482 0.120873547 ## 6 5.372083e-06 26701 1010.568516 0.056395341 0.053384693 0.055252579 # action1-m h1n1_data_complete &lt;- complete(imp, action = 2) 2.3  2.3.1  ? z-scoreLOF  2.3.2  boxlpot #  nums &lt;- unlist(lapply(BostonHousing, is.numeric)) nums_data &lt;- BostonHousing[, nums] #  nums_data.new &lt;- nums_data %&gt;% as.data.frame() %&gt;% mutate(Cell = rownames(.)) %&gt;% gather(., key = colname, value = &quot;value&quot;, -Cell) # ggplot ggplot(data = nums_data.new, aes(x = colname, y = value)) + geom_boxplot(aes(1)) + facet_wrap(~colname, scales = &quot;free&quot;) + theme_grey() + labs(title = &quot;Outlier Detection On Numeric Data By Boxplot&quot;, x = &quot;Numeric Columns&quot;, y = &quot;&quot;) + theme(legend.position = &quot;top&quot;) + theme_bw() dis&gt;10.0 2.3.3 z-score z-scorez-score-33 # xmatrixdf,zsz-scorezs outliers &lt;- function(x, zs) { temp &lt;- abs(apply(x, 1, scale)) return(x[temp &gt; zs]) } # z-score&lt;3 outliers(nums_data, 3) ## [1] 7.380 0.700 0.573 5.889 17.400 20.200 392.400 396.900 396.900 ## [10] 393.680 396.900 368.570 396.900 377.730 375.330 396.900 391.980 100.630 ## [19] 388.520 255.230 374.680 392.680 395.770 12.430 11.280 27.710 10.210 ## [28] 6.860 9.880 9.620 4.210 13.000 25.410 16.900 29.550 6.360 ## [37] 4.850 4.700 4.610 13.270 2.960 24.560 19.370 14.100 14.330 ## [46] 22.800 33.400 2.3.4  (LOF) # k outlier_score &lt;- lof(data = nums_data, k = 5) #  hist(outlier_score, col = &quot;#8ac6d1&quot;) #  names(outlier_score) &lt;- 1:nrow(nums_data) sort(outlier_score, decreasing = TRUE)[1:5] ## 489 493 381 492 406 ## 5.133201 4.534088 4.529170 3.732775 3.559666 2.3.5    2.4   2.4.1 / One-hot encoding  dummy,10 https://www.cnblogs.com/lianyingteng/p/7792693.html 01  Rdummy_cols()01 h1n1_data_dummy &lt;- dummy_cols(subset(h1n1_data_complete, select = c(age_group)), select_columns = c(&quot;age_group&quot;)) head(h1n1_data_dummy) ## age_group age_group_18 - 34 Years age_group_35 - 44 Years ## 1 55 - 64 Years 0 0 ## 2 35 - 44 Years 0 1 ## 3 18 - 34 Years 1 0 ## 4 65+ Years 0 0 ## 5 45 - 54 Years 0 0 ## 6 65+ Years 0 0 ## age_group_45 - 54 Years age_group_55 - 64 Years age_group_65+ Years ## 1 0 1 0 ## 2 0 0 0 ## 3 0 0 0 ## 4 0 0 1 ## 5 1 0 0 ## 6 0 0 1 2.4.2  (Label Encoder) Rfactorfactorfactorfactoras.numeric() h1n1_data_complete_lab_encoder &lt;- h1n1_data_complete h1n1_data_complete_lab_encoder$income_poverty_lab_encoder &lt;- as.numeric(factor(h1n1_data_complete_lab_encoder$income_poverty, levels = c(&quot;Below Poverty&quot;, &quot;&lt;= $75,000, Above Poverty&quot;, &quot;&gt; $75,000&quot;))) head(subset(h1n1_data_complete_lab_encoder, select = c(income_poverty, income_poverty_lab_encoder))) ## income_poverty income_poverty_lab_encoder ## 1 Below Poverty 1 ## 2 Below Poverty 1 ## 3 &lt;= $75,000, Above Poverty 2 ## 4 Below Poverty 1 ## 5 &lt;= $75,000, Above Poverty 2 ## 6 &lt;= $75,000, Above Poverty 2 2.4.3  case_when() h1n1_data_manual &lt;- subset(h1n1_data_complete, select = c(age_group)) h1n1_data_manual$age_group_manual &lt;- case_when( h1n1_data_manual$age_group %in% c(&quot;18 - 34 Years&quot;) ~ 1, h1n1_data_manual$age_group %in% c(&quot;35 - 44 Years&quot;, &quot;45 - 54 Years&quot;, &quot;55 - 64 Years&quot;) ~ 2, h1n1_data_manual$age_group %in% c(&quot;65+ Years&quot;) ~ 3 ) head(h1n1_data_manual) ## age_group age_group_manual ## 1 55 - 64 Years 2 ## 2 35 - 44 Years 2 ## 3 18 - 34 Years 1 ## 4 65+ Years 3 ## 5 45 - 54 Years 2 ## 6 65+ Years 3 2.4.4  R 2.5  0-1Z-score (linear regression)   BostonHousing %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~key, scales = &quot;free&quot;) + geom_density(color = &quot;#348498&quot;, fill = &quot;#8ac6d1&quot;) + theme_bw() 2.5.1 0-1 0-1[0,1]  nums_data_norm1 &lt;- nums_data for (col in names(nums_data_norm1)) { xmin &lt;- min(nums_data_norm1[col]) xmax &lt;- max(nums_data_norm1[col]) nums_data_norm1[col] &lt;- (nums_data_norm1[col] - xmin) / (xmax - xmin) } head(nums_data_norm1) ## crim zn indus nox rm age dis ## 1 0.0000000000 0.18 0.06781525 0.3148148 0.5775053 0.6416066 0.2692031 ## 2 0.0002359225 0.00 0.24230205 0.1728395 0.5479977 0.7826982 0.3489620 ## 3 0.0002356977 0.00 0.24230205 0.1728395 0.6943859 0.5993821 0.3489620 ## 4 0.0002927957 0.00 0.06304985 0.1502058 0.6585553 0.4418126 0.4485446 ## 5 0.0007050701 0.00 0.06304985 0.1502058 0.6871048 0.5283213 0.4485446 ## 6 0.0002644715 0.00 0.06304985 0.1502058 0.5497222 0.5746653 0.4485446 ## rad tax ptratio b lstat medv ## 1 0.00000000 0.20801527 0.2872340 1.0000000 0.08967991 0.4222222 ## 2 0.04347826 0.10496183 0.5531915 1.0000000 0.20447020 0.3688889 ## 3 0.04347826 0.10496183 0.5531915 0.9897373 0.06346578 0.6600000 ## 4 0.08695652 0.06679389 0.6489362 0.9942761 0.03338852 0.6311111 ## 5 0.08695652 0.06679389 0.6489362 1.0000000 0.09933775 0.6933333 ## 6 0.08695652 0.06679389 0.6489362 0.9929901 0.09602649 0.5266667 0-1 nums_data_norm1 %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~key, scales = &quot;free&quot;) + geom_density(color = &quot;#348498&quot;, fill = &quot;#8ac6d1&quot;) + theme_bw() dlookrtransform() nums_data_norm2 &lt;- nums_data nums_data_norm2$crim &lt;- dlookr::transform(nums_data$crim, method = &quot;minmax&quot;) 2.5.2 Z-score Z-score Rscale()z-scoredlookrtransform() nums_data_zscore &lt;- nums_data nums_data_zscore &lt;- scale(nums_data_zscore) head(nums_data_zscore) ## crim zn indus nox rm age dis ## 1 -0.4193669 0.2845483 -1.2866362 -0.1440749 0.4132629 -0.1198948 0.140075 ## 2 -0.4169267 -0.4872402 -0.5927944 -0.7395304 0.1940824 0.3668034 0.556609 ## 3 -0.4169290 -0.4872402 -0.5927944 -0.7395304 1.2814456 -0.2655490 0.556609 ## 4 -0.4163384 -0.4872402 -1.3055857 -0.8344581 1.0152978 -0.8090878 1.076671 ## 5 -0.4120741 -0.4872402 -1.3055857 -0.8344581 1.2273620 -0.5106743 1.076671 ## 6 -0.4166314 -0.4872402 -1.3055857 -0.8344581 0.2068916 -0.3508100 1.076671 ## rad tax ptratio b lstat medv ## 1 -0.9818712 -0.6659492 -1.4575580 0.4406159 -1.0744990 0.1595278 ## 2 -0.8670245 -0.9863534 -0.3027945 0.4406159 -0.4919525 -0.1014239 ## 3 -0.8670245 -0.9863534 -0.3027945 0.3960351 -1.2075324 1.3229375 ## 4 -0.7521778 -1.1050216 0.1129203 0.4157514 -1.3601708 1.1815886 ## 5 -0.7521778 -1.1050216 0.1129203 0.4406159 -1.0254866 1.4860323 ## 6 -0.7521778 -1.1050216 0.1129203 0.4101651 -1.0422909 0.6705582 0 data.frame(nums_data_zscore) %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~key, scales = &quot;free&quot;) + geom_density(color = &quot;#348498&quot;, fill = &quot;#8ac6d1&quot;) + theme_bw() 2.5.3 (log transform) 0log1plg(x+1)dlookrtransform()mutate #  nums_data_log1p1 &lt;- log(nums_data + 1) # transform() nums_data_log1p2 &lt;- nums_data nums_data_log1p2$b &lt;- dlookr::transform(nums_data_log1p2$b, method = &quot;log+1&quot;)  nums_data_log1p1 %&gt;% keep(is.numeric) %&gt;% gather() %&gt;% ggplot(aes(value)) + facet_wrap(~key, scales = &quot;free&quot;) + geom_density(color = &quot;#348498&quot;, fill = &quot;#8ac6d1&quot;) + theme_bw() 2.5.4 Box-Cox Box-CoxBoxCox1964 RBox-Cox 2.6  Rmutate SQLmutate h1n1_data_de &lt;- h1n1_data_complete %&gt;% to_dummy(education, suffix = &quot;label&quot;) %&gt;% bind_cols(h1n1_data_complete) %&gt;% mutate( # (label encoder) sex = as.factor(as.numeric(factor(sex))), income_poverty = (as.numeric(factor( income_poverty, levels = c( &quot;Below Poverty&quot;, &quot;&lt;= $75,000, Above Poverty&quot;, &quot;&gt; $75,000&quot; ) ))), #  age_group = as.factor( case_when( age_group %in% c(&quot;18 - 34 Years&quot;) ~ 1, age_group %in% c(&quot;35 - 44 Years&quot;, &quot;45 - 54 Years&quot;, &quot;55 - 64 Years&quot;) ~ 2, age_group %in% c(&quot;65+ Years&quot;) ~ 3 ) ), #  across( c( &quot;h1n1_knowledge&quot;, &quot;doctor_recc_h1n1&quot;, &quot;chronic_med_condition&quot;, &quot;opinion_h1n1_vacc_effective&quot;, &quot;age_group&quot;, &quot;income_poverty&quot; ), ~ scale(as.numeric(.x)) ) ) %&gt;% dplyr::select(-one_of(&quot;education&quot;, &quot;education_&quot;)) head(h1n1_data_de) ## education_&lt; 12 Years education_12 Years education_College Graduate ## 1 1 0 0 ## 2 0 1 0 ## 3 0 0 1 ## 4 0 1 0 ## 5 0 0 0 ## 6 0 1 0 ## education_Some College respondent_id h1n1_knowledge doctor_recc_h1n1 ## 1 0 0 -2.0416901 -0.5258839 ## 2 0 1 1.1935904 -0.5258839 ## 3 0 2 -0.4240499 -0.5258839 ## 4 0 3 -0.4240499 -0.5258839 ## 5 1 4 -0.4240499 -0.5258839 ## 6 0 5 -0.4240499 -0.5258839 ## chronic_med_condition health_insurance opinion_h1n1_vacc_effective ## 1 -0.6284091 1 -0.8439071 ## 2 -0.6284091 1 1.1407906 ## 3 1.5912605 1 -0.8439071 ## 4 1.5912605 1 -0.8439071 ## 5 -0.6284091 0 -0.8439071 ## 6 -0.6284091 1 1.1407906 ## age_group sex income_poverty h1n1_vaccine ## 1 -0.09109418 1 -1.8905904 0 ## 2 -0.09109418 2 -1.8905904 0 ## 3 -1.58547517 2 -0.2945789 0 ## 4 1.40328681 1 -1.8905904 0 ## 5 -0.09109418 1 -0.2945789 0 ## 6 1.40328681 2 -0.2945789 0 RR 2.7       https://cloud.tencent.com/developer/article/1626004  Multiple Imputationhttps://zhuanlan.zhihu.com/p/36436260  R https://blog.csdn.net/kicilove/article/details/76260350 LOF -Local Outlier Factor(LOF) https://blog.csdn.net/BigData_Mining/article/details/102914342   https://blog.csdn.net/u014381464/article/details/81101551  https://blog.csdn.net/zhang15953709913/article/details/88717220 R funModelinghttps://cran.r-project.org/web/packages/funModeling/vignettes/funModeling_quickstart.html tidyversehttps://www.tidyverse.org/ VIMhttps://www.datacamp.com/community/tutorials/visualize-data-vim-package mice(Multivariate Imputation by Chained Equations)https://cran.r-project.org/web/packages/mice/mice.pdf micehttps://blog.csdn.net/sinat_26917383/article/details/51265213 micehttp://blog.fens.me/r-na-mice/ carethttps://www.cnblogs.com/Hyacinth-Yuan/p/8284612.html Rhttps://zhuanlan.zhihu.com/p/83984803 RBox-Coxhttps://ask.hellobi.com/blog/R_shequ/18371 Rhttps://zhuanlan.zhihu.com/p/45163182  June Datawhale https://blog.csdn.net/Yao_June Datawhale Datawhale AIDatawhale for the learner Datawhale   Datawhale "]]
