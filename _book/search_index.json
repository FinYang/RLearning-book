[["task-01.html", " 1   1.1  1.2  1.3  1.4  1.5  1.6   Datawhale", "  1   1.1  RR  R Studio  R script  R Markdown  1.2   R Studio  Console  .Rhistory  R Studio  History RunCtrl + Enter 1.2.1  +-*/^%%sqrt 1 + 1 ## [1] 2 1 - 1 ## [1] 0 1 * 2 ## [1] 2 1 / 2 ## [1] 0.5 3 %% 2 ## [1] 1 2^(1 / 2) ## [1] 1.414214 sqrt(2) ## [1] 1.414214 1.2.2   R  # 42x x &lt;- 42 # R # Rprint x ## [1] 42  R  &lt;- -&gt; =1 R   a &lt;- b &lt;- 42a &lt;- 42 -&gt; b  &lt;&lt;-  -&gt;&gt;  ===a &lt;- 1 == 2 vs a = 1 == 2 &lt;-=  R Studio Alt + -&lt;- R Studio R&lt;- R Studio  Python =  y &lt;- 21 x + y ## [1] 63 x &lt;- x + y 1.2.3  RFunctional ProgrammingObject-Oriented Programming PythonRClassObjectFunction R&lt;- addone &lt;- function(x = 0) { x + 1 } addonexxxx = 0 #  addone(42) ## [1] 43 #  y &lt;- 42 addone(y) ## [1] 43 arguments= addone(x = 42) ## [1] 43 R addone ## function(x = 0) { ## x + 1 ## } ## &lt;bytecode: 0x000000001543caa8&gt;  y &lt;- 42 y_plusone &lt;- addone(y) 1.2.4 loop  R forwhilerepeatfor x &lt;- 0 for(i in 1:3){ x &lt;- x + i print(x) } ## [1] 1 ## [1] 3 ## [1] 6 x0foriiini13xix  x0i1x1 x1i2x3 x3i3x6 1.2.5 pipe addoneaddtwoaddthree addone &lt;- function(x) x+1 addtwo &lt;- function(x) x+2 addthree &lt;- function(x) x+3 x &lt;- 0 addthree(addtwo(addone(x))) ## [1] 6 addone01addtwoaddthree magrittr%&gt;%method chain # tidyverse library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.3 v dplyr 1.0.7 ## v tidyr 1.1.3 v stringr 1.4.0 ## v readr 2.0.0 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() x %&gt;% addone() %&gt;% addtwo() %&gt;% addthree() ## [1] 6 xaddoneaddoneaddtwoaddthree R ?`%&gt;%` 1.3  1.3.1  R 1.3.1.1  doubleintegercomplex # numeric a &lt;- 132.2345 # Inf # integer b &lt;- 132L # complex c &lt;- 2 + 3i 8bytes LL84 i typeof(): typeof(a) ## [1] &quot;double&quot; typeof(b) ## [1] &quot;integer&quot; typeof(c) ## [1] &quot;complex&quot; 1.3.1.2  logicalTRUET  FALSEF: TRUE ## [1] TRUE T ## [1] TRUE FALSE ## [1] FALSE F ## [1] FALSE TRUEFALSETTTRUE and&amp;or|not! TRUE &amp; FALSE ## [1] FALSE TRUE | FALSE ## [1] TRUE !TRUE ## [1] FALSE 1.3.1.3  character string_a &lt;- &quot;A&quot; string_b &lt;- &quot;letter&quot; string_c &lt;- &quot;This is a sentence.&quot; string_d &lt;- &quot;42&quot; string_e &lt;- &quot;TRUE&quot; TRUEFALSE typeof(42) ## [1] &quot;double&quot; typeof(&quot;42&quot;) ## [1] &quot;character&quot; typeof(TRUE) ## [1] &quot;logical&quot; typeof(&quot;TRUE&quot;) ## [1] &quot;character&quot; 3.2.2 R'\"' This is an \"example\". 'C, C++, JavaCRC 1.3.2 vector atomic vector   vec_num &lt;- c(1, 2, 3) vec_log &lt;- c(TRUE, FALSE, TRUE) vec_cha &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;middle school&quot;) c() vec_A &lt;- c(1, 2, 3) vec_B &lt;- c(3, 5, 6) vec_A + vec_B #  c(1 + 3, 2 + 5, 3 + 6) ## [1] 4 7 9 !vec_log ## [1] FALSE TRUE FALSE sumvarmean sum(vec_A) ## [1] 6 var(vec_A) ## [1] 1 mean(vec_A) ## [1] 2 1.3.2.1 factor factorc vec_fac &lt;- factor(c(&quot;male&quot;, &quot;female&quot;, &quot;male&quot;, &quot;female&quot;, &quot;female&quot;)) vec_fac ## [1] male female male female female ## Levels: female male levelsvec_facmalefemale #  levels(vec_fac) ## [1] &quot;female&quot; &quot;male&quot; orderedfactorordered = TRUEargumentlevels educ &lt;- ordered( c(&quot;kindergarten&quot;, &quot;primary school&quot;, &quot;middle school&quot;, &quot;primary school&quot;, &quot;middle school&quot;, &quot;kindergarten&quot;), levels = c(&quot;kindergarten&quot;, &quot;primary school&quot;, &quot;middle school&quot;) ) #  educ &lt;- factor( c(&quot;kindergarten&quot;, &quot;primary school&quot;, &quot;middle school&quot;, &quot;primary school&quot;, &quot;middle school&quot;, &quot;kindergarten&quot;), ordered = TRUE, levels = c(&quot;kindergarten&quot;, &quot;primary school&quot;, &quot;middle school&quot;) ) educ ## [1] kindergarten primary school middle school primary school middle school ## [6] kindergarten ## Levels: kindergarten &lt; primary school &lt; middle school R  1.3.2.2  / &gt;&gt;  &gt;&gt;  vec_loc &lt;- c(TRUE, FALSE, TRUE) #  vec_num &lt;- as.numeric(vec_loc) vec_num ## [1] 1 0 1 #  vec_cha &lt;- as.character(vec_num) vec_cha ## [1] &quot;1&quot; &quot;0&quot; &quot;1&quot; #  vec_cha2 &lt;- as.character(vec_loc) vec_cha2 ## [1] &quot;TRUE&quot; &quot;FALSE&quot; &quot;TRUE&quot; ##  #  as.numeric(vec_cha) ## [1] 1 0 1 #  as.logical(vec_cha2) ## [1] TRUE FALSE TRUE #  as.logical(vec_num) ## [1] TRUE FALSE TRUE TRUEFALSE10   0FALSETRUE TRUEFALSE NANANot Available #  as.logical(c(&quot;some&quot;, &quot;random&quot;, &quot;strings&quot;)) ## [1] NA NA NA  vec_fac &lt;- factor(c(&quot;male&quot;, &quot;female&quot;, &quot;male&quot;, &quot;female&quot;, &quot;female&quot;)) #  vec_num &lt;- as.numeric(vec_fac) vec_num ## [1] 2 1 2 1 1 #  vec_cha &lt;- as.character(vec_fac) vec_cha ## [1] &quot;male&quot; &quot;female&quot; &quot;male&quot; &quot;female&quot; &quot;female&quot; #  as.factor(vec_cha) ## [1] male female male female female ## Levels: female male #  as.factor(vec_num) ## [1] 2 1 2 1 1 ## Levels: 1 2 R    1.3.2.3   #  #  vec &lt;- c(1, 2, 3) names(vec) &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;) vec ## A B C ## 1 2 3 #  #  vec &lt;- c(A = 1, B = 2, C = 3) vec ## A B C ## 1 2 3 1.3.2.4  [[[  $$    TRUE FALSE Nothing 0  [  vec &lt;- c(a = 1.2, b = 5.6, c = 8.4, d = 9.5) # 1.  vec[c(1,3)] ## a c ## 1.2 8.4 # 2.  vec[c(-1,-3)] ## b d ## 5.6 9.5 # 3.  vec[c(TRUE, FALSE, FALSE, TRUE)] ## a d ## 1.2 9.5 # 4. Nothing vec[] ## a b c d ## 1.2 5.6 8.4 9.5 # 5.  vec[0] ## named numeric(0) # 6.  vec[c(&quot;a&quot;, &quot;c&quot;)] ## a c ## 1.2 8.4 [[ [  #  vec[[1]] ## [1] 1.2 vec[1] ## a ## 1.2 vec[c(1, 3)] ## a c ## 1.2 8.4 #  vec[[c(1, 3)]] ## Error in vec[[c(1, 3)]]: attempt to select more than one element in vectorIndex [[[ 1.3.3  1.3.3.1 date RDate-POSIXctPOSIXltlubridate library(lubridate) ## ## Attaching package: &#39;lubridate&#39; ## The following objects are masked from &#39;package:base&#39;: ## ## date, intersect, setdiff, union 3031lubridateymd sevenseven &lt;- ymd(&quot;2021-07-07&quot;) sevenseven ## [1] &quot;2021-07-07&quot; typeof(sevenseven) ## [1] &quot;double&quot; class(sevenseven) ## [1] &quot;Date&quot; Dateclassdouble sevenseven + 1 ## [1] &quot;2021-07-08&quot;  sevenseven + months(1) ## [1] &quot;2021-08-07&quot; ymdlubridate myddmymdydym yq  lubridatelubridate 1.3.3.2 ts Rts time series  xts &lt;- ts(rnorm(12), start = c(2021, 1), frequency = 4) xts ## Qtr1 Qtr2 Qtr3 Qtr4 ## 2021 -0.01854647 0.41850557 -1.90485991 0.05536588 ## 2022 -0.55632530 -0.72005219 0.40252629 -0.24945994 ## 2023 -1.02223328 0.45472318 1.03158278 -0.56410412 tsstartfrequency2021 #  start(xts) ## [1] 2021 1 #  end(xts) ## [1] 2023 4 #  frequency(xts) ## [1] 4 forecast ARIMA  library(forecast) ## Registered S3 method overwritten by &#39;quantmod&#39;: ## method from ## as.zoo.data.frame zoo gas %&gt;% auto.arima() %&gt;% forecast(36) %&gt;% autoplot() tidyverts forecast 1.4   1.4.1 matrix RRmatrix matrix(1:9, nrow = 3) ## [,1] [,2] [,3] ## [1,] 1 4 7 ## [2,] 2 5 8 ## [3,] 3 6 9 1:9  c(1, 2, 3, 4, 5, 6, 7, 8, 9) 1 RncolRRRbyrowTRUE matrix(1:9, ncol = 3, byrow = TRUE) ## [,1] [,2] [,3] ## [1,] 1 2 3 ## [2,] 4 5 6 ## [3,] 7 8 9 R mat_month &lt;- matrix(month.name, nrow = 4, byrow = TRUE) mat_month ## [,1] [,2] [,3] ## [1,] &quot;January&quot; &quot;February&quot; &quot;March&quot; ## [2,] &quot;April&quot; &quot;May&quot; &quot;June&quot; ## [3,] &quot;July&quot; &quot;August&quot; &quot;September&quot; ## [4,] &quot;October&quot; &quot;November&quot; &quot;December&quot; 1.4.1.1  rownamescolnames #  rownames(mat_month) &lt;- c(&quot;Quarter1&quot;, &quot;Quarter2&quot;, &quot;Quarter3&quot;, &quot;Quarter4&quot;) colnames(mat_month) &lt;- c(&quot;Month1&quot;, &quot;Month2&quot;, &quot;Month3&quot;) mat_month ## Month1 Month2 Month3 ## Quarter1 &quot;January&quot; &quot;February&quot; &quot;March&quot; ## Quarter2 &quot;April&quot; &quot;May&quot; &quot;June&quot; ## Quarter3 &quot;July&quot; &quot;August&quot; &quot;September&quot; ## Quarter4 &quot;October&quot; &quot;November&quot; &quot;December&quot; #  rownames(mat_month) ## [1] &quot;Quarter1&quot; &quot;Quarter2&quot; &quot;Quarter3&quot; &quot;Quarter4&quot; colnames(mat_month) ## [1] &quot;Month1&quot; &quot;Month2&quot; &quot;Month3&quot; #  dimnames(mat_month) ## [[1]] ## [1] &quot;Quarter1&quot; &quot;Quarter2&quot; &quot;Quarter3&quot; &quot;Quarter4&quot; ## ## [[2]] ## [1] &quot;Month1&quot; &quot;Month2&quot; &quot;Month3&quot; 1.4.1.2  [[[ # 12 mat_month[[1, 2]] ## [1] &quot;February&quot; #  #  mat_month[, 2] ## Quarter1 Quarter2 Quarter3 Quarter4 ## &quot;February&quot; &quot;May&quot; &quot;August&quot; &quot;November&quot; #  #  mat_month[1, ] ## Month1 Month2 Month3 ## &quot;January&quot; &quot;February&quot; &quot;March&quot; #  #  mat_month[[&quot;Quarter1&quot;, &quot;Month3&quot;]] ## [1] &quot;March&quot; 1.4.2 list R list(1, 2, 3) ## [[1]] ## [1] 1 ## ## [[2]] ## [1] 2 ## ## [[3]] ## [1] 3 list(1, &quot;lol&quot;, TRUE) ## [[1]] ## [1] 1 ## ## [[2]] ## [1] &quot;lol&quot; ## ## [[3]] ## [1] TRUE  stuff &lt;- list( list( 1:12, &quot;To be or not to be&quot;, c(TRUE, FALSE)), 42, list( list( ymd(&quot;2021-07-07&quot;), &quot;remembrance&quot;), 2L+3i) ) stuff ## [[1]] ## [[1]][[1]] ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 ## ## [[1]][[2]] ## [1] &quot;To be or not to be&quot; ## ## [[1]][[3]] ## [1] TRUE FALSE ## ## ## [[2]] ## [1] 42 ## ## [[3]] ## [[3]][[1]] ## [[3]][[1]][[1]] ## [1] &quot;2021-07-07&quot; ## ## [[3]][[1]][[2]] ## [1] &quot;remembrance&quot; ## ## ## [[3]][[2]] ## [1] 2+3i 1.4.2.1  [[[ #  stuff[1:2] ## [[1]] ## [[1]][[1]] ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 ## ## [[1]][[2]] ## [1] &quot;To be or not to be&quot; ## ## [[1]][[3]] ## [1] TRUE FALSE ## ## ## [[2]] ## [1] 42 #  stuff[[1]][[2]] ## [1] &quot;To be or not to be&quot; 1.4.2.2   #  names(stuff) &lt;- c(&quot;I&quot;, &quot;II&quot;, &quot;III&quot;) #  names(stuff[[1]]) &lt;- c(&quot;I&quot;, &quot;II&quot;, &quot;III&quot;)  # III stuff[[&quot;I&quot;]][[&quot;II&quot;]] ## [1] &quot;To be or not to be&quot; $ stuff$I$II ## [1] &quot;To be or not to be&quot; 1.4.3 data frame  tibble data framelistmatrix df &lt;- data.frame(x = 1:12, y = month.abb, z = month.name) df ## x y z ## 1 1 Jan January ## 2 2 Feb February ## 3 3 Mar March ## 4 4 Apr April ## 5 5 May May ## 6 6 Jun June ## 7 7 Jul July ## 8 8 Aug August ## 9 9 Sep September ## 10 10 Oct October ## 11 11 Nov November ## 12 12 Dec December  tibbletidyversetibbletibbletibble data frame tibble  tb &lt;- tibble(a = 1:100, b = 101:200) tb ## # A tibble: 100 x 2 ## a b ## &lt;int&gt; &lt;int&gt; ## 1 1 101 ## 2 2 102 ## 3 3 103 ## 4 4 104 ## 5 5 105 ## 6 6 106 ## 7 7 107 ## 8 8 108 ## 9 9 109 ## 10 10 110 ## # ... with 90 more rows tibble 1.4.3.1   # x df[[&quot;x&quot;]] ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 df$x ## [1] 1 2 3 4 5 6 7 8 9 10 11 12 #  df[1, 2] ## [1] &quot;Jan&quot; # tibble2 tb[, 2] ## # A tibble: 100 x 1 ## b ## &lt;int&gt; ## 1 101 ## 2 102 ## 3 103 ## 4 104 ## 5 105 ## 6 106 ## 7 107 ## 8 108 ## 9 109 ## 10 110 ## # ... with 90 more rows # tibble12 tb[1, 2] ## # A tibble: 1 x 1 ## b ## &lt;int&gt; ## 1 101 tb$a # tibble tibble tibbletibble 1.5   1.5.1  RRdata # R data() # R data(package = &quot;dplyr&quot;) # AirPassengers data(&quot;AirPassengers&quot;) glimpse(AirPassengers) ## Time-Series [1:144] from 1949 to 1961: 112 118 132 129 121 135 148 148 136 119 ... 1.5.2 csv, excel) h1n1  h1n1_flu.csv  h1n1_flu  # csv library(readr) h1n1_flu &lt;- read_csv(&quot;h1n1_flu.csv&quot;) # csv write_csv(h1n1_flu, &quot;h1n1_flu.csv&quot;) # excel library(readxl) #  h1n1_flu &lt;- read_excel(&quot;h1n1_flu.xls&quot;) # xls h1n1_flu &lt;- read_xls(&quot;h1n1_flu.xls&quot;) # xlsx h1n1_flu &lt;- read_xlsx(&quot;h1n1_flu.xlsx&quot;) R excel csv  excel openxlsx 1.5.3 RRData, rds R rds  RData  rds R RData  #  h1n1_flu &lt;- read_rds(&quot;h1n1_flu.rds&quot;) #  write_rds(h1n1_flu, &quot;h1n1_flu.rds&quot;) #  load(&quot;h1n1_flu.RData&quot;) #  save(h1n1_flu, file = &quot;h1n1_flu.RData&quot;) 1.5.4 SPSS, Stata, SAS Rhaven SPSS  sav  zsav Stata  dtaSAS  sas7bdat  sas7bcat library(haven) # SPSS read_spss() write_spss() # Stata read_dta() write_dta() # SAS read_sas() write_sas() 1.6  1.6.1  h1n1_flu 1.6.1.1  ?fun glimpse(h1n1_flu) str(h1n1_flu) head(h1n1_flu) tail(h1n1_flu) View(h1n1_flu) summary(h1n1_flu) nrow(h1n1_flu) length(h1n1_flu$sex) class(h1n1_flu$sex) summary(h1n1_flu) table(h1n1_flu$sex) 1.6.1.2  h1n1_flu %&gt;% group_by(sex, employment_status) %&gt;% summarise(n()) ## `summarise()` has grouped output by &#39;sex&#39;. You can override using the `.groups` argument. ## # A tibble: 8 x 3 ## # Groups: sex [2] ## sex employment_status `n()` ## &lt;chr&gt; &lt;chr&gt; &lt;int&gt; ## 1 Female Employed 7416 ## 2 Female Not in Labor Force 6918 ## 3 Female Unemployed 735 ## 4 Female &lt;NA&gt; 789 ## 5 Male Employed 6144 ## 6 Male Not in Labor Force 3313 ## 7 Male Unemployed 718 ## 8 Male &lt;NA&gt; 674 ?summarise 1.6.2      Fin https://yangzhuoranyang.com Datawhale Datawhale AIDatawhale for the learner Datawhale   Datawhale "]]
